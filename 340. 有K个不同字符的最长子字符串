public class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        int res = 0;
        int i = 0;
        HashMap<Character, Integer> map = new HashMap<>();
        for (int j = 0; j < s.length(); j++){
            char cj = s.charAt(j);
            if (!map.containsKey(cj)){
                map.put(cj,1);
            }else{
                map.put(cj, map.get(cj) + 1);
            }
            while (map.size() > k){
                char ci = s.charAt(i);
                map.put(ci, map.get(ci) - 1);
                i++;
                if (map.get(ci) == 0) map.remove(ci);
            }
            res = Math.max(res, j - i + 1);

        }
        return res;
    }
}
控制一个start指针，就是建立一个hashmap，如果把当前的加进来之后 hashmap的大小大于 k了，我们就把前面指针的字符删掉 直到map的大小回到k，然后继续往下遍历
