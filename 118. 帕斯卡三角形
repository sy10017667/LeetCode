public class Solution {
    public List<List<Integer>> generate(int n) {
        List<List<Integer>> res = new ArrayList<>();
        int[][] matrix = new int[n][n];

        for (int i = 0; i < n ; i++){
            List<Integer> temp = new ArrayList<>();
            for (int j = 0; j < i + 1; j++){
                if (i > 0 && j > 0){
                    matrix[i][j] = matrix[i-1][j-1] + matrix[i-1][j];
                }else{
                    matrix[i][j] = 1;
                }
                temp.add(matrix[i][j]);
            }
            res.add(new ArrayList<Integer>(temp));
        }
        return res;
    }
}

动态规划思想，等于（左上）+ （上方）
f(i,j) = f(i-1, j-1)+f(i-1, j）
/*
[1,0,0,0,0]
[0,0,0,0,0]
[0,0,0,0,0]
[0,0,0,0,0]
[0,0,0,0,0]

temp <1>


[1,0,0,0,0]
[1,1,0,0,0]
[1,2,1,0,0]
[1,3,3,1,0]
[1,4,6,4,1]


*/
