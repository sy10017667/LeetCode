public class Solution {
    public int myAtoi(String s) {
        s = s.trim();
        if (s.length() == 0) return 0;
        System.out.println(s);
        
        int sign = 1;
        int start = 0;

        if (s.charAt(0) == '-') {
            sign = -1;
            start = 1;
        }else if (s.charAt(0) == '+') start = 1;
        
        long res = 0;
        
        for (int i = start; i < s.length(); i++){
            char ci = s.charAt(i);
            if (!Character.isDigit(ci)){
                return (int) res * sign;
            }
            res = res * 10 + (ci -'0');
            System.out.println(res);
            
        if (res * sign >= Integer.MAX_VALUE){
                return Integer.MAX_VALUE;
            }
        if (res * sign <= Integer.MIN_VALUE){
                return Integer.MIN_VALUE;
            }
        }
        
        return (int) res * sign;
    }
}此题目乃我最讨厌的题目，我觉得最重要的是按照他的哪个spoiler写，自己列举比较麻烦，看来思路还是需要锻炼。
大象装冰箱总共分4步
1. 先把字符串之前的空格去掉，注意的是s.trim（）不会在原字符串上进行修改，只会返回一个去除头尾所有空格后的新字符串
2. 判断第一个字符是不是 正负号
3. 遍历字符串，如果遇见非数字就停止，比如说123a456 返回123就可以了
4. 判断溢出，如果大于整形最大值或者小于整形最小值，返回Integer.MAV_VALUE, Integer.MIN_VALUE;
5. 如果全都是字符的话返回0.
此题so annoying.
